[{"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/reportWebVitals.js":"1","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Home/Home.jsx":"2","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/index.js":"3","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/apiCalls/apiCalls.js":"4","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Card/Card.jsx":"5","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Container/Container.jsx":"6","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Saved/Saved.jsx":"7","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/App/App.js":"8"},{"size":362,"mtime":1610558633513,"results":"9","hashOfConfig":"10"},{"size":1296,"mtime":1611013293176,"results":"11","hashOfConfig":"10"},{"size":548,"mtime":1610931111587,"results":"12","hashOfConfig":"10"},{"size":1492,"mtime":1611012827054,"results":"13","hashOfConfig":"10"},{"size":1521,"mtime":1611013048703,"results":"14","hashOfConfig":"10"},{"size":674,"mtime":1611013180640,"results":"15","hashOfConfig":"10"},{"size":4147,"mtime":1611010540571,"results":"16","hashOfConfig":"10"},{"size":580,"mtime":1611012887992,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"173aezt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/reportWebVitals.js",[],["36","37"],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Home/Home.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/index.js",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/apiCalls/apiCalls.js",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Card/Card.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Container/Container.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Saved/Saved.jsx",["38"],"\nimport React, { useState, useEffect } from 'react';\nimport { getAllFavorites, removeJoke, addNewFavorite  } from '../apiCalls/apiCalls';\nimport './Saved.css';\nimport Container from '../Container/Container';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport SaveIcon from \"@material-ui/icons/Save\";\nModal.setAppElement(\"body\");\n\n\nfunction Saved() {\n  const customStyles = {\n    content: {\n      top: \"36%\",\n      left: \"67%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-83%, -45%)\",\n      background: 'rgb(78 127 144)',\n      opacity: \"90%\",\n    },\n  };\n\n  var subtitle;\n  const [jokeModalIsOpen, setJokeModalIsOpen] = useState(false)\n  const [ favorites, setFavorites ] = useState([])\n  const [error, setError] = useState('')\n  const [newJoke, setNewJoke] = useState('')\n  const [inputError, setInputError] = useState(false)\n\n  const submitJoke = event => {\n    event.preventDefault()\n    const newUserJoke = {\n      id: Date.now(),\n      joke: newJoke\n    }\n    if(newJoke === '') {\n     return setInputError(true)\n    }\n    addNewUserJoke(newUserJoke)\n    addNewFavorite(newUserJoke.id, newUserJoke.joke)\n    cleanInputs()\n    closeJokeModal()\n  }\n\n  const addNewUserJoke = (userJoke) => {\n    setFavorites([...favorites, userJoke])\n  }\n\n  const cleanInputs = () => {\n    setNewJoke('')\n  }\n\n  function openJokeModal() {\n    setJokeModalIsOpen(true)\n  }\n\n  function afterOpenJokeModal() {\n    subtitle.style.color = 'white'\n  }\n\n  function closeJokeModal() {\n    setJokeModalIsOpen(false)\n  }\n\n  const getFavorites = async () => {\n    try{\n      const favorites = await getAllFavorites()\n      setFavorites(favorites)\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n\n  useEffect(() => {\n    getFavorites()\n  }, [])\n\n\n  const deleteJoke = (id) => {\n    const filteredJokes = favorites.filter((joke) => joke.id !== id);\n    removeJoke(id);\n    setFavorites(filteredJokes)\n  };\n\n    return (\n      <div className=\"saved\">\n        <h2 className='header'>My favorite jokes</h2>\n        <Link to=\"/\">\n          <Button aria-label=\"home\" variant=\"contained\" color=\"secondary\">\n            Home\n          </Button>\n        </Link>\n        <Button variant=\"contained\" color=\"primary\" onClick={openJokeModal}>\n          Add a joke\n        </Button>\n        {/* <Button variant='contained' color='secondary'>\n          Search\n        </Button>  */}\n        <Modal\n          isOpen={jokeModalIsOpen}\n          onAfterOpen={afterOpenJokeModal}\n          onRequestClose={closeJokeModal}\n          style={customStyles}\n          contentLabel=\"Add joke modal\"\n        >\n          <h2 ref={(_subtitle) => (subtitle = _subtitle)}>\n            Add a new joke here\n          </h2>\n          <form>\n              <textarea\n                className='text-area'\n                type=\"text\"\n                wrap=\"soft\"\n                style={{fontSize: 20}}\n                placeholder=\"Add joke here\"\n                name=\"newJoke\"\n                value={newJoke}\n                onChange={(event) => setNewJoke(event.target.value)}\n              />\n              <Button\n                className='modal-buttons'\n                variant=\"contained\"\n                color=\"secondary\"\n                icon={<SaveIcon />}\n                onClick={submitJoke}\n              >\n                Save joke\n              </Button>\n              {inputError === true && (\n                <h2>Please add joke before submitting</h2>\n              )}\n              <Button\n                className=\"modal-buttons\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={closeJokeModal}\n              >\n                CLOSE\n              </Button>\n          </form>\n        </Modal>\n        <div className=\"spacer\"></div>\n        {!favorites.length && <h2>You do not have any saved jokes.</h2>}\n        <Container jokeSlips={favorites} deleteJoke={deleteJoke} />\n      </div>\n    );\n}\n\nSaved.propTypes = {\n  favorites: PropTypes.array,\n}\n\nexport default Saved;","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/App/App.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":31,"column":10,"nodeType":"45","messageId":"46","endLine":31,"endColumn":15},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]