[{"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/reportWebVitals.js":"1","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Home/Home.jsx":"2","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/index.js":"3","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/apiCalls/apiCalls.js":"4","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Card/Card.jsx":"5","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Container/Container.jsx":"6","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Saved/Saved.jsx":"7","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/container/Container.jsx":"8","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/card/Card.jsx":"9","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/header/Header.jsx":"10","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/saved/Saved.jsx":"11","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/home/Home.jsx":"12","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/app/App.jsx":"13"},{"size":362,"mtime":1610558633513,"results":"14","hashOfConfig":"15"},{"size":1443,"mtime":1613408860614,"results":"16","hashOfConfig":"15"},{"size":552,"mtime":1613420435999,"results":"17","hashOfConfig":"15"},{"size":1497,"mtime":1613408907186,"results":"18","hashOfConfig":"15"},{"size":1521,"mtime":1611023735948,"results":"19","hashOfConfig":"15"},{"size":678,"mtime":1613409079859,"results":"20","hashOfConfig":"15"},{"size":6602,"mtime":1613408860619,"results":"21","hashOfConfig":"15"},{"size":678,"mtime":1613422043084,"results":"22","hashOfConfig":"15"},{"size":1521,"mtime":1611023735948,"results":"23","hashOfConfig":"15"},{"size":538,"mtime":1613416999755,"results":"24","hashOfConfig":"15"},{"size":6605,"mtime":1613422087508,"results":"25","hashOfConfig":"15"},{"size":1447,"mtime":1613422053565,"results":"26","hashOfConfig":"15"},{"size":628,"mtime":1613422071068,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"173aezt",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/reportWebVitals.js",[],["58","59"],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Home/Home.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/index.js",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/apiCalls/apiCalls.js",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Card/Card.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Container/Container.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/Saved/Saved.jsx",["60"],"\nimport React, { useState, useEffect } from 'react';\nimport { getAllFavorites, removeJoke, addNewFavorite  } from '../apiCalls/apiCalls';\nimport './Saved.css';\nimport Container from '../container/Container';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport SaveIcon from \"@material-ui/icons/Save\";\nModal.setAppElement(\"body\");\n\n\nfunction Saved() {\n  const customStyles = {\n    content: {\n      top: \"36%\",\n      left: \"67%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-83%, -45%)\",\n      background: 'rgb(78 127 144)',\n      opacity: \"90%\",\n    },\n  };\n\n  var subtitle;\n  const [jokeModalIsOpen, setJokeModalIsOpen] = useState(false)\n  const [searchModalIsOpen, setSeachModalIsOpen] = useState(false)\n  const [ favorites, setFavorites ] = useState([])\n  const [error, setError] = useState('')\n  const [newJoke, setNewJoke] = useState('')\n  const [inputError, setInputError] = useState(false)\n  const [searchInput, setSearchInput] = useState('')\n  const [searchError, setSearchError] = useState(false)\n\n  const submitJoke = event => {\n    event.preventDefault()\n    const newUserJoke = {\n      id: Date.now(),\n      joke: newJoke\n    }\n    if(newJoke === '') {\n     return setInputError(true)\n    }\n    addNewUserJoke(newUserJoke)\n    addNewFavorite(newUserJoke.id, newUserJoke.joke)\n    cleanInputs()\n    closeJokeModal()\n  }\n\n  const addNewUserJoke = (userJoke) => {\n    setFavorites([...favorites, userJoke])\n  }\n\n  const searchForJoke = (searchWord) =>  {\n    closeSearchModal()\n    const searchTerm = searchInput.toLowerCase()\n    const results = favorites.filter(favorite => {\n      return favorite.joke.includes(searchTerm)\n    })\n    if(!results.length ) {\n      setSearchError(true)\n    }\n    setFavorites(results)\n  }\n\n  const cleanInputs = () => {\n    setNewJoke('')\n  }\n\n  function openJokeModal() {\n    setJokeModalIsOpen(true)\n  }\n  function openSearchModal() {\n    setSeachModalIsOpen(true)\n  }\n\n  function afterOpenJokeModal() {\n    subtitle.style.color = 'white'\n  }\n  function afterOpenSearchModal() {\n    subtitle.style.color = \"white\"\n  }\n\n  function closeJokeModal() {\n    setJokeModalIsOpen(false)\n  }\n  function closeSearchModal() {\n    setSeachModalIsOpen(false)\n    setSearchInput('')\n  }\n\n  const getFavorites = async () => {\n    try{\n      const favorites = await getAllFavorites()\n      setFavorites(favorites)\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n\n  useEffect(() => {\n    getFavorites()\n  }, [])\n\n\n  const deleteJoke = (id) => {\n    const filteredJokes = favorites.filter((joke) => joke.id !== id);\n    removeJoke(id);\n    setFavorites(filteredJokes)\n  };\n\n    return (\n      <div className=\"saved\">\n        <h2 className=\"header\">My favorite jokes</h2>\n        <Link to=\"/\">\n          <Button\n            aria-label=\"home\"\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ marginRight: '2em' }}\n          >\n            Home\n          </Button>\n        </Link>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={openJokeModal}\n          style={{ marginRight: '2em' }}\n        >\n          Add a joke\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={openSearchModal}>\n          Search\n        </Button>\n        <Modal\n          isOpen={jokeModalIsOpen}\n          onAfterOpen={afterOpenJokeModal}\n          onRequestClose={closeJokeModal}\n          style={customStyles}\n          contentLabel=\"Add joke modal\"\n        >\n          <h2 ref={(_subtitle) => (subtitle = _subtitle)}>\n            Add a new joke here\n          </h2>\n          <form>\n            <textarea\n              className=\"text-area\"\n              type=\"text\"\n              wrap=\"soft\"\n              style={{ fontSize: 20 }}\n              placeholder=\"Add joke here\"\n              name=\"newJoke\"\n              value={newJoke}\n              onChange={(event) => setNewJoke(event.target.value)}\n            />\n            <Button\n              className=\"modal-buttons\"\n              variant=\"contained\"\n              color=\"secondary\"\n              icon={<SaveIcon />}\n              onClick={submitJoke}\n            >\n              Save joke\n            </Button>\n            {inputError === true && <h2>Please add joke before submitting</h2>}\n            <Button\n              className=\"modal-buttons\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={closeJokeModal}\n            >\n              CLOSE\n            </Button>\n          </form>\n        </Modal>\n        <Modal\n          isOpen={searchModalIsOpen}\n          onAfterOpen={afterOpenSearchModal}\n          onRequestClose={closeSearchModal}\n          style={customStyles}\n          contentLabel=\"Search jokes modal\"\n        >\n          <h2 ref={(_subtitle) => (subtitle = _subtitle)}>\n            Search for a joke here\n          </h2>\n          <form>\n            <input\n              className=\"search-area\"\n              style={{ fontSize: 20 }}\n              type=\"search\"\n              placeholder=\"Search\"\n              name=\"searchInput\"\n              value={searchInput}\n              onChange={(event) => setSearchInput(event.target.value)}\n            />\n            {inputError === true && (\n              <h2>Please add search parameter before submitting</h2>\n            )}\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              data-testid=\"search-button\"\n              onClick={searchForJoke}\n            >\n              Search\n            </Button>\n            <Button\n              className=\"modal-buttons\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={closeSearchModal}\n            >\n              CLOSE\n            </Button>\n          </form>\n        </Modal>\n        <div className=\"spacer\"></div>\n        {!favorites.length && searchError === false && (\n          <h2>You do not have any saved jokes.</h2>\n        )}\n        {searchError === true && (\n          <h2 data-testid=\"search-error\">\n            Sorry, there are no results for that search. Press\n            <Link to=\"/\" data-testid=\"return-home\">\n              {' '}\n              here\n            </Link>{' '}\n            to go home or reload the page.\n          </h2>\n        )}\n        <Container jokeSlips={favorites} deleteJoke={deleteJoke} />\n      </div>\n    )\n}\n\nSaved.propTypes = {\n  favorites: PropTypes.array,\n}\n\nexport default Saved;",["61","62"],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/container/Container.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/card/Card.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/header/Header.jsx",["63","64","65","66","67","68","69"],"import React, { useState, useEffect } from 'react'\nimport './Header.css'\nimport { AppBar } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { Button } from '@material-ui/core'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\n\nfunction Header() {\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <Typography variant=\"h2\">Funny-Dev</Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/saved/Saved.jsx",["70"],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/home/Home.jsx",[],"/Users/amandadavidson/Turing/mod_3/projects_3/funny-dev/src/app/App.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":32,"column":10,"nodeType":"77","messageId":"78","endLine":32,"endColumn":15},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"81","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"82","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"83","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":7,"column":27,"nodeType":"77","messageId":"78","endLine":7,"endColumn":33},{"ruleId":"75","severity":1,"message":"85","line":7,"column":35,"nodeType":"77","messageId":"78","endLine":7,"endColumn":41},{"ruleId":"75","severity":1,"message":"86","line":7,"column":43,"nodeType":"77","messageId":"78","endLine":7,"endColumn":48},{"ruleId":"75","severity":1,"message":"87","line":7,"column":50,"nodeType":"77","messageId":"78","endLine":7,"endColumn":54},{"ruleId":"75","severity":1,"message":"76","line":32,"column":10,"nodeType":"77","messageId":"78","endLine":32,"endColumn":15},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["88"],["89"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]